Pertanyaan 
1.	Jalankan code program diatas dan benahi jika menemukan kesalahan! 
Tidak menemukan kesalahan. Kode berjalan dengan benar. 
 

2.	Bagaimana cara konstruktor pada subclass memanggil konstruktor di superclass nya? Apakah hal itu perlu dilakukan? Sertakan alasan anda ! 
Cara konstruktor subclass memanggil konstruktor pada superclassnya adalah dengan keyword super. Hal ini perlu dilakukan jika kita sebagai user ingin menginialisasi atribut yang diwarisi dari superclassnya.
 

3.	Tambahkan constructor pada class Employee dengan parameter String name! amati perubahan apa yang terjadi, jelaskan jawaban anda! 
Program tetap berjalan tanpa kesalahan atau error. Jika menambahkan konstruktor  overloading seperti yang diperintah soal tidak berpengaruh pada subclass Manager. 
 

Jika subclass Manager ingin mewariskan konstruktor  overloading tersebut
 
 

4.	Pada Class Manager baris ke 5, setelah variable day tambahkan variable bonus! Amati apa yang terjadi dan mengapa demikian? 
Terjadi kesalahan atau error jika kita menambahkan variabel bonus. Karena variabel bonus tidak dideklarasikan pada konstruktor yang diwariskan dari superclass Employee.
 
 
 
 

 

5.	Untuk apa digunakan keyword this pada class manager dan employee? Hapus keyword this dan amati apa yang terjadi? 
Fungsi keyword this adalah untuk merujuk atau mengakses objek dan memberi nilai variabel.
Jika keyword this dihapus maka parameter akan menginialisasikan dirinya sendiri serta ketika di dalam objek tidak ada perubahan atribut. Jadi, nilainya menjadi nilai yang sudah ditetapkan sebelumnya atau bisa juga bernilai null.
  

6.	Tambahkan constructor pada class Employee dengan parameter Bertipe data string bernama name yang nantinya bila constructor ini akan dipanggil akan menginisialisasi variable name! Amati perubahannya pada class anak dan jelaskan! Benahi bila terjadi kesalahan! 
 
  
 
  

7.	Pada bab sebelumnya anda telah belajar mengenai konsep encapsulation, jelaskan mengapa pada super class menggunakan modifier protected? Apa yang terjadi jika modifier anda ubah menjadi private atau public? Jelaskan ! 
Fungsi enkapsulasi adalah menyembunyikan detail artibut dari kelas lain. Protected memungkinkan akses ke semua subclass meskipun subclass di package yang berbeda. Jadi, menggunakan protected karena pewarisan disini dari superclass ke subclass, bisa mendapatkan akses, dan menghindari class lain yang bukan pewarisannya mendapat akses modifikasi.
Jika diubah ke private aksesnya sangat terbatas karena subclass tidak dapat mengakses, sehingga hanya busa diakses di class dimana dia dideklarasikan.
Jika diubah ke public menyebabkan kelas lain yang bukan pewarisan atau subclassnya dapat mendapatkan akses modifikasi juga.

8.	Ubahlah acces modifier method pada kelas employee menjadi : 
a.	Private 
b.	Protected 
Amati perubahan apa yang terjadi? Jelaskan jawaban anda dengan detail! 

   
 
 
 

